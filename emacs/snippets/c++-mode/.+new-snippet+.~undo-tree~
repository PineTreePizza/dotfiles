(undo-tree-save-format-version . 1)
"469bcddff2ee3fc96eb79431a39b73221159eb04"
[nil nil nil nil (25863 26021 231250 626000) 0 nil]
([nil nil ((36 . 41) (#("SD" 0 2 (face font-lock-comment-face fontified nil)) . 47) (44 . 47) (35 . 36) (#("S" 0 1 (face font-lock-comment-face fontified nil)) . 45) (43 . 45) (34 . 35) (42 . 43) (33 . 34) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 33 48 nil (#s(yas--mirror 56 59 (yas--key-from-desc yas-text) #s(yas--field 2 56 59 nil nil nil nil #8) #s(yas--exit 65 nil) nil)) nil t #s(yas--field 2 56 59 nil nil nil nil #s(yas--mirror 56 59 (yas--key-from-desc yas-text) #7 #s(yas--exit 65 nil) nil))) #s(yas--field 2 56 59 nil nil nil nil #s(yas--mirror 56 59 (yas--key-from-desc yas-text) #6 #s(yas--exit 65 nil) nil))) #s(yas--exit 65 nil) 2 nil #s(yas--field 1 33 48 nil (#s(yas--mirror 56 59 (yas--key-from-desc yas-text) #s(yas--field 2 56 59 nil nil nil nil #7) #s(yas--exit 65 nil) nil)) nil t #s(yas--field 2 56 59 nil nil nil nil #s(yas--mirror 56 59 (yas--key-from-desc yas-text) #6 #s(yas--exit 65 nil) nil))) nil nil)) (1 . 47)) nil (25863 26021 231248 772000) 0 nil])
([nil nil ((#("O" 0 1 (face font-lock-comment-face fontified t)) . -38) (undo-tree-id11 . -1) (#("U" 0 1 (face font-lock-comment-face fontified t)) . -39) (undo-tree-id12 . -1) (#("L" 0 1 (face font-lock-comment-face fontified t)) . -40) (undo-tree-id13 . -1) 41) nil (25863 26021 231245 136000) 0 nil])
([nil nil ((38 . 48)) nil (25863 26021 231241 789000) 0 nil])
([nil nil ((#("c" 0 1 (face font-lock-comment-face fontified t)) . -46) (undo-tree-id9 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -47) (undo-tree-id10 . -1) 48) nil (25863 26021 231240 106000) 0 nil])
([nil nil ((46 . 48)) nil (25863 26021 231237 40000) 0 nil])
([nil nil ((apply yas--snippet-revive 1 65 #s(yas--snippet nil (#s(yas--field 1 33 48 nil (#s(yas--mirror 56 59 (yas--key-from-desc yas-text) #s(yas--field 2 56 59 nil nil nil nil #8) #s(yas--exit 65 nil) nil)) nil t #s(yas--field 2 56 59 nil nil nil nil #s(yas--mirror 56 59 (yas--key-from-desc yas-text) #7 #s(yas--exit 65 nil) nil))) #s(yas--field 2 56 59 nil nil nil nil #s(yas--mirror 56 59 (yas--key-from-desc yas-text) #6 #s(yas--exit 65 nil) nil))) #s(yas--exit 65 nil) 2 nil #s(yas--field 1 33 48 nil (#s(yas--mirror 56 59 (yas--key-from-desc yas-text) #s(yas--field 2 56 59 nil nil nil nil #7) #s(yas--exit 65 nil) nil)) nil t #s(yas--field 2 56 59 nil nil nil nil #s(yas--mirror 56 59 (yas--key-from-desc yas-text) #6 #s(yas--exit 65 nil) nil))) nil nil))) nil (25863 26021 231235 648000) 0 nil])
([nil nil ((#("s" 0 1 (face font-lock-comment-face fontified t)) . -13) (undo-tree-id2 . -1) (#("n" 0 1 (face font-lock-comment-face fontified t)) . -14) (undo-tree-id3 . -1) (#("i" 0 1 (face font-lock-comment-face fontified t)) . -15) (undo-tree-id4 . -1) (#("p" 0 1 (face font-lock-comment-face fontified t)) . -16) (undo-tree-id5 . -1) (#("p" 0 1 (face font-lock-comment-face fontified t)) . -17) (undo-tree-id6 . -1) (#("e" 0 1 (face font-lock-comment-face fontified t)) . -18) (undo-tree-id7 . -1) (#("t" 0 1 (face font-lock-comment-face fontified t)) . -19) (undo-tree-id8 . -1) 20) nil (25863 26021 231232 492000) 0 nil])
([nil nil ((13 . 16)) nil (25863 26021 231223 776000) 0 nil])
([nil nil ((#("_" 0 1 (face font-lock-comment-face fontified t)) . -14) (undo-tree-id0 . -1) (#("_" 0 1 (face font-lock-comment-face fontified t)) . -15) (undo-tree-id1 . -1) 16) nil (25863 26021 231220 840000) 0 nil])
([nil current ((14 . 16)) nil (25863 26021 231195 813000) 0 nil])
nil
